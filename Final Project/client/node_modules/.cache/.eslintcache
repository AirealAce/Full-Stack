[{"C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\index.js":"1","C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\App.js":"2","C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\pages\\EditPost.js":"3","C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\pages\\ReadPosts.js":"4","C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\pages\\CreatePost.js":"5","C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\components\\DetailView.js":"6","C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\client.js":"7","C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\components\\Card.js":"8"},{"size":347,"mtime":1713071571435,"results":"9","hashOfConfig":"10"},{"size":990,"mtime":1714232619523,"results":"11","hashOfConfig":"10"},{"size":3113,"mtime":1714232910269,"results":"12","hashOfConfig":"10"},{"size":2428,"mtime":1714260639148,"results":"13","hashOfConfig":"10"},{"size":2063,"mtime":1714232962286,"results":"14","hashOfConfig":"10"},{"size":3667,"mtime":1714236871323,"results":"15","hashOfConfig":"10"},{"size":393,"mtime":1714039157710,"results":"16","hashOfConfig":"10"},{"size":1947,"mtime":1714236712004,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gp23ef",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\index.js",[],[],"C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\App.js",["44"],[],"import './App.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport ReadPosts from './pages/ReadPosts';\nimport CreatePost from './pages/CreatePost';\nimport EditPost from './pages/EditPost';\nimport DetailView from './components/DetailView'; \nimport { Link } from 'react-router-dom';\n\nconst App = () => {\n  \n  const descr = ''\n\n  const posts = [\n  ]\n \n  let element = useRoutes([\n    { path: \"/\", element: <ReadPosts data={posts}/> },\n    { path: \"/edit/:id\", element: <EditPost data={posts} /> },\n    { path: \"/new\", element: <CreatePost /> },\n    { path: \"/details/:id\", element: <DetailView /> }, \n  ]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>ðŸ’° Preneur Manure ðŸ’©</h1>\n        <Link to=\"/\"><button className=\"headerBtn\"> Explore Posts ðŸ‘€ </button></Link>\n        <Link to=\"/new\"><button className=\"headerBtn\"> Add Idea ðŸ§» </button></Link>\n      </div>\n      {element}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\pages\\EditPost.js",[],[],"C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\pages\\ReadPosts.js",[],[],"C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\pages\\CreatePost.js",[],[],"C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\components\\DetailView.js",["45"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\nimport './DetailView.css'; \r\n\r\nconst DetailView = () => {\r\n    const { id } = useParams();\r\n    const [detail, setDetail] = useState(null);\r\n    const [likeCount, setLikeCount] = useState(0); \r\n    const [comments, setComments] = useState([]); \r\n    const [newComment, setNewComment] = useState(''); \r\n\r\n    const fetchComments = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Comments')\r\n            .select('*')\r\n            .eq('postid', id);\r\n\r\n        if (error) {\r\n            console.error('Error fetching comments:', error);\r\n        } else {\r\n            setComments(data);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchDetail = async () => {\r\n            const { data, error } = await supabase\r\n                .from('Manure Posts')\r\n                .select('*')\r\n                .eq('id', id)\r\n                .single();\r\n\r\n            if (error) {\r\n                console.error('Error fetching details:', error);\r\n            } else {\r\n                setDetail(data);\r\n                setLikeCount(data.likes); \r\n            }\r\n        };\r\n\r\n        fetchComments();\r\n        fetchDetail();\r\n    }, [id]);\r\n\r\n    const handleLikeClick = async () => {\r\n        const newLikeCount = likeCount + 1; \r\n        setLikeCount(newLikeCount); \r\n\r\n        await supabase\r\n            .from('Manure Posts')\r\n            .update({ likes: newLikeCount })\r\n            .eq('id', id);\r\n    };\r\n\r\n    const handleSubmitComment = async (e) => {\r\n        e.preventDefault();\r\n        if (!newComment.trim()) return;\r\n\r\n        await supabase\r\n            .from('Comments')\r\n            .insert([{ postid: id, content: newComment }]);\r\n\r\n        setNewComment('');\r\n        \r\n        fetchComments();\r\n    };\r\n\r\n    const handleEditClick = () => {\r\n        window.location.href = `/edit/${id}`;\r\n    };\r\n\r\n    const handleDeleteClick = async () => {\r\n        await supabase\r\n            .from('Manure Posts')\r\n            .delete()\r\n            .eq('id', id);\r\n        \r\n        window.location.href = '/';\r\n    };\r\n\r\n    if (!detail) return <div className=\"DetailView Loading\">Loading...</div>;\r\n\r\n    return (\r\n        <div className=\"DetailView\">\r\n            <button className=\"editButton\" onClick={handleEditClick}>Edit</button>\r\n            <button className=\"editButton\" onClick={handleDeleteClick} style={{ backgroundColor: 'darkred' }}>Delete</button>\r\n            <h1>{detail.name}</h1>\r\n            <h2>{detail.type}</h2>\r\n            <p>{detail.description}</p>\r\n            <button className=\"likeButton\" onClick={handleLikeClick}>\r\n                ðŸš½ {likeCount}\r\n            </button>\r\n            <div>\r\n                <h3>Comments</h3>\r\n                <ul>\r\n                    {comments.map(comment => (\r\n                        <li key={comment.id}>{comment.content}</li>\r\n                    ))}\r\n                </ul>\r\n                <form onSubmit={handleSubmitComment}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newComment}\r\n                        onChange={e => setNewComment(e.target.value)}\r\n                        placeholder=\"Add a comment...\"\r\n                        style={{\r\n                            width: '300px', \r\n                            height: '30px', \r\n                        }}\r\n                    />\r\n                    <button type=\"submit\">Post Comment</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailView;\r\n","C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\client.js",[],[],"C:\\Users\\aaron\\OneDrive\\Desktop\\Cabinent\\Content\\Code\\Github\\CAP Full Stack\\Final Project\\client\\src\\components\\Card.js",[],[],{"ruleId":"46","severity":1,"message":"47","line":12,"column":9,"nodeType":"48","messageId":"49","endLine":12,"endColumn":14},{"ruleId":"50","severity":1,"message":"51","line":44,"column":8,"nodeType":"52","endLine":44,"endColumn":12,"suggestions":"53"},"no-unused-vars","'descr' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchComments'. Either include it or remove the dependency array.","ArrayExpression",["54"],{"desc":"55","fix":"56"},"Update the dependencies array to be: [fetchComments, id]",{"range":"57","text":"58"},[1305,1309],"[fetchComments, id]"]